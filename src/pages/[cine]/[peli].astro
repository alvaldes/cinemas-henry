---
import MainLayout from '@/layouts/main.astro';
import { getMovies } from '@/lib/utils';
import { Bookmark, Clock } from '@lucide/astro';
import DatePicker from '@/components/DatePicker.astro';
import type { Movie } from '@/lib/types';
import { defaultCines } from '@/lib/constants';

// Obtener el parámetro de la URL
const { cine, peli } = Astro.params;

let date = new Date();
date.setDate(date.getDate() + 1);
console.log(cine)
let movies = await fetch(`${Astro.url.origin}/api/peliculas/${cine}.json`).then((response) => {
  if (!response.ok) {
    throw new Error("Error al obtener las películas");
  }
  return response.json();
}).catch((error) => {
  console.error("Error fetching movies:", error);
  return [];
});
console.log(movies)
const movie = movies?.find((m: Movie) => m.id === peli);

if (!movie) {
  throw new Error("Película no encontrada");
}

// Función para manejar el cambio de fecha
async function handleDateChange(newDate: Date) {
  console.log("Nueva fecha seleccionada:", newDate);
  date = newDate;
  movies = await fetch(`${Astro.url.origin}/api/peliculas/${cine}.json?date=${newDate.toISOString().split('T')[0]}`).then((response) => {
    if (!response.ok) {
      throw new Error("Error al obtener las películas");
    }
    return response.json();
  }).catch((error) => {
    console.error("Error fetching movies:", error);
    return [];
  })
}

export async function getStaticPaths() {
    const paths = [];
    for (const cine of defaultCines) {
        const movies = await getMovies(`https://${cine.value}.cinebox.mx`);
        for (const movie of movies ?? []) {
            paths.push({
                params: { cine: cine.value.toLowerCase(), peli: movie.id },
                props: { movie },
            });
        }
    }
    return paths;
}
---

<MainLayout content={{ title: movie.title }}>
  <section class="container mx-auto text-white overflow-hidden">
    <div class="relative py-8">
        <!-- Fondo blur con la imagen -->
        <div
        class="absolute inset-0 -z-10 mx-auto mt-14 mb-8 w-8/12 h-auto bg-cover bg-center"
        style={`background-image: url('${movie.img_primary}'); background-size: cover; background-position: center; filter: blur(16px); brightness(0.5);`}
        aria-hidden="true"
        ></div>
        <!-- Overlay oscuro para mejorar contraste -->
        <div class="absolute inset-0 bg-background/50 -z-10"></div>

        <h1 class="text-4xl font-bold mb-4 capitalize" transition:name={`title-${movie.id}`}>{movie.id}</h1>
        <!-- Póster y botón trailer -->
      <div class="flex justify-around items-start gap-14 mr-20">
        <div class="pl-1">
            <img src={movie.img_primary} alt={movie.title} class="rounded-lg shadow-lg w-96 mb-4" transition:name={`poster-${movie.id}`} />
            <div class="flex items-center gap-2 mb-4 pl-2">
                <span class="bg-yellow-100 text-yellow-800 text-xs font-medium me-2 px-2.5 py-0.5 rounded-full dark:bg-amber-900 dark:text-yellow-300">{movie.genre}</span>
                <span class="bg-yellow-100 text-yellow-800 text-xs font-medium me-2 px-2.5 py-0.5 rounded-full dark:bg-amber-900 dark:text-yellow-300">{movie.classification}</span>
                <span class="bg-yellow-100 text-yellow-800 text-xs font-medium me-2 px-2.5 py-0.5 rounded-full dark:bg-amber-900 dark:text-yellow-300">{movie.type}</span>
            </div>
            <div class="mb-4 mt-4 flex flex-col gap-4 pl-1">
                <div class="flex flex-col pl-4 border-l-4 border-yellow-300 rounded">
                    <span class="text-sm uppercase tracking-wider">Proximamente</span>
                    <span class="text-sm"> Estreno {movie.releaseDate}</span>
                </div>
                <button class="flex items-center bg-yellow-400 hover:bg-yellow-500 text-black font-bold py-2 px-4 rounded-3xl justify-center cursor-pointer">
                    <Bookmark class="h-5 w-5 mr-2" />
                    <span>Añadir a Favoritos</span>
                </button>
            </div>
        </div>
        <lite-youtube
            videoid={movie.trailer.split("/").pop()}
            autoload
            autopause
            posterquality="maxresdefault"
          class="w-full h-auto mx-auto rounded-lg overflow-hidden"
          ></lite-youtube>
      </div>
    </div>
    <div class="grid grid-cols-1 md:grid-cols-2 gap-8 mt-4 ">
        <div class="">
          <p class="py-4 border-b border-gray-700 text-pretty">{movie.synopsis.slice(1)}</p>
          <div class="py-4 border-b border-gray-700 w-full">
            <span class="font-bold">Director</span>
            <span class="ml-2 text-blue-400 cursor-pointer">{movie.director}</span>
          </div>
          <div class="py-4 border-b border-gray-700 w-full">
            <span class="font-bold">Reparto</span>
            <span class="ml-2">
              {movie.actors.split(',').map((actor: any) => (
                <span class="text-blue-400 cursor-pointer">{actor.trim()}</span>
              )).reduce((prev:any, curr:any) => [prev, <span class="text-gray-400 mx-1">·</span>, curr])}
            </span>
          </div>
          <div class="py-4">
            <span class="font-bold">Duración</span>
            <span class="ml-2">{movie.duration} min</span>
          </div>
          
        </div>
        <div class="mt-4">
              <DatePicker initialDate={date} onDateChange={handleDateChange} />
              <div class="mt-4">
                {movie.showtimes?.length > 0 ? (
                  movie.showtimes.map((showtime:any) => (
                    <div
                      class="flex items-center justify-start gap-4 p-2 border-b border-gray-600"
                    >
                      <span class="text-sm font-medium flex items-center">
                        <Clock class="h-5 w-5 mr-2" />
                        {showtime.hour}
                        </span>
                      <span class="text-sm text-blue-400">
                        {showtime.format}
                        </span>
                        <span class="bg-blue-400/10 text-blue-800 border border-blue-900 text-xs font-medium me-2 px-2.5 py-0.5 rounded-full">
                          {showtime.subtitled ? "Subtitulada" : "Doblada"}
                        </span>
                    </div>
                  ))
                ) : (
                  <div class="text-sm text-gray-400">No hay funciones disponibles.</div>
                )}
              </div>
        </div>
    </div>
  </section>
</MainLayout>

<script type="module" src="https://cdn.jsdelivr.net/npm/@justinribeiro/lite-youtube@1/lite-youtube.min.js"></script>